select report_date
      ,shipper_uid 
      ,shift_type
      ,hub_name
      ,case when registration_status != 'OFF' then 'Working-date'
            else 'Off-date' end as date_type
     ,extra_ship
     ,count( case when status in (2,14,15) and deny_type = 1 and registration_status != 'OFF' and date_format(update_time,'%H:%i:%S') < start_time  then order_uid 
                  when status in (2,14,15) and deny_type = 1 and registration_status = 'OFF' then order_uid 
                  else null end) as total_deny_unacceptable_out_shift
     ,count( case when status in (2,14,15) and deny_type <> 1 and registration_status != 'OFF' and date_format(update_time,'%H:%i:%S') < start_time then order_uid 
                  when status in (2,14,15) and deny_type <> 1 and registration_status = 'OFF' then order_uid 
                  else null end) as total_deny_acceptable_out_shift
     ,count( case when status in (8,9)   and registration_status != 'OFF' and date_format(update_time,'%H:%i:%S') < start_time then order_uid 
                  when status in (8,9)  and  registration_status = 'OFF' then order_uid 
                   else null end) as total_ignore_out_shift
from 
(SELECT   
            date(a.update_time) as report_date
            ,a.order_uid
            ,a.shipper_uid 
            ,a.update_time 
            ,a.status
            ,hi.hub_name
            ,case when cast(json_extract(hub.extra_data,'$.is_apply_fixed_amount') as VARCHAR) = 'true' then (cast(json_extract(hub.extra_data,'$.total_income') as bigint) - cast(json_extract(hub.extra_data,'$.calculated_shipping_shared') as bigint))
                  else 0 end as extra_ship    
            ,case when slot.registration_status = 1 then 'Registered'
                  when slot.registration_status = 2 then 'OFF'
                  when slot.registration_status = 3 then 'Worked'
                  else null
                  end as registration_status
            ,case when (slot.end_time - slot.start_time)/3600 = 10 then '10 hour shift'
                  when (slot.end_time - slot.start_time)/3600 = 8  then '8 hour shift'
                  when (slot.end_time - slot.start_time)/3600 = 5 then '5 hour shift'
                  else null end as shift_type
            ,dod.deny_type
            ,date_format(from_unixtime(slot.start_time - 3600),'%H:%i:%S') as start_time
            ,date_format(from_unixtime(slot.end_time - 3600),'%H:%i:%S') as end_time


        from (SELECT concat(cast(order_id as VARCHAR),'-',cast(order_type as VARCHAR)) as order_uid, shipper_uid,order_id, city_id, assign_type, from_unixtime(update_time - 60*60) update_time, from_unixtime(create_time - 60*60) create_time,status,order_type, experiment_group

                from foody.foody_partner_archive_db__order_assign_shipper_log_archive_tab
                where status in (8,9,2,14,15)
                UNION
            
                SELECT concat(cast(order_id as VARCHAR),'-',cast(order_type as VARCHAR)) as order_uid, shipper_uid,order_id, city_id, assign_type, from_unixtime(update_time - 60*60) update_time, from_unixtime(create_time - 60*60) create_time,status,order_type, experiment_group
        
                from foody.foody_partner_db__order_assign_shipper_log_tab
                 where status in (8,9,2,14,15)
                )a
        left join
                (SELECT dod.*, dot.ref_order_id, dot.ref_order_category,dot.group_id,from_unixtime(dod.create_time - 60*60)
                
                
            FROM shopeefood.foody_partner_db__driver_order_deny_log_tab__reg_daily_s0_live dod 
        LEFT JOIN shopeefood.foody_partner_db__driver_order_tab__reg_daily_s0_live dot on dod.order_id = dot.id
            ) dod 
            on a.order_id = (case when dod.ref_order_category <> 7 then dod.ref_order_id
                                  when dod.ref_order_category = 7 and dod.group_id = 0 then dod.ref_order_id
                                  else dod.group_id end) and a.order_type = dod.ref_order_category 
                                  and a.shipper_uid = dod.uid and a.status in (2,14,15) and from_unixtime(dod.create_time - 60*60) >= a.create_time
                                           

         left join (
                select 
                    date_format(from_unixtime(shipper_shift_start_timestamp),'%H:%i:%S') as start_time
                    ,date_format(from_unixtime(shipper_shift_end_timestamp),'%H:%i:%S') as end_time
                    ,shipper_id
                    ,city_id
                    ,shipper_type_id
                    ,shipper_shift_id
                    ,date_diff('second',from_unixtime(shipper_shift_start_timestamp),from_unixtime(shipper_shift_end_timestamp))/3600 as shift_time
                    ,case when grass_date = 'current' then date(current_date)
                    else cast(grass_date as date) end as report_date
                    from shopeefood.foody_mart__profile_shipper_master  )sm on sm.shipper_id = a.shipper_uid and sm.report_date = date(a.update_time)
        left join        shopeefood.foody_internal_db__shipper_shift_tab__reg_daily_s0_live ss on ss.id = sm.shipper_shift_id  
        left join (select *,date(from_unixtime(report_date - 3600)) as date_ , from_unixtime(report_date - 3600) as ts_
        from shopeefood.foody_internal_db__shipper_hub_income_report_tab__reg_daily_s0_live 
                   where uid = 20686721   
                   )hub on hub.uid = a.shipper_uid and date(from_unixtime(hub.report_date - 3600)) = date(a.update_time)
        left join shopeefood.foody_internal_db__shipper_slot_registration_tab__vn_daily_s0_live slot on slot.uid = a.shipper_uid 
                                                                                                and date(from_unixtime(date_ts - 3600)) = date(a.create_time)

        left join shopeefood.foody_internal_db__shipper_hub_info_tab__reg_daily_s0_live hi on hi.id = cast(json_extract(hub.extra_data,'$.hub_ids[0]') as bigint)
        
WHERE   1 = 1
AND sm.shipper_type_id = 12 
--and a.shipper_uid =
--AND sm.city_id = 218 
AND date(a.update_time) >= date((current_date ) - interval '1' day )
AND date(a.update_time) < date(current_date) )
WHERE 1 = 1 
group by 1,2,3,4,5,6
        
        
        
        
        