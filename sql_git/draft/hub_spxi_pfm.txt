with hub as 
(SELECT 
base.report_date
,base.uid
,base.distance
,base.ref_order_id
,base.city_group
,base.create_hour
,base.service
,coalesce(base.hub_name,base.pick_hub_name)  as hub_location
,case 
      when base.distance <= 3 then '1. 0 - 3km'
      when base.distance <= 4 then '2. 3 - 4km'
      when base.distance <= 5 then '3. 4 - 5km'
      else '4. > 5km' end as distance_range   
,case when base.shipper_type_id = 12 and base.policy = 2 then 'Hub Inshift'
ELSE 'Non Hub' end as delivered_by
,case WHEN base.hub_id > 0 and base.report_date < date'2022-03-09' and base.city_group = 'HCM' and base.create_hour between 8 and 19 then 1
 	  WHEN base.hub_id > 0 and base.report_date >= date'2022-03-09' and base.city_group = 'HCM'  and base.create_hour between 8 and 21 then 1
      WHEN base.hub_id > 0 and base.report_date < date'2022-03-17' and base.city_group = 'HN' and base.create_hour between 8 and 19 then 1
 	  WHEN base.hub_id > 0 and base.report_date >= date'2022-03-17' and base.city_group = 'HN'  and base.create_hour between 8 and 20 then 1
      WHEN base.hub_id > 0 and base.city_group = 'HP'  and base.create_hour between 10 and 19 then 1
  	  WHEN base.hub_id > 0 and base.create_hour between 8 and 19 then 1
 	  --WHEN base.pick_hub_id > 0 and base.create_hour between 8 and 19 and base.distance < 2.3 then 1	
      else 0 end as is_hub_qualified
,base.is_asap
,case when is_group_order = 1 then 'Group'
      when is_stack_order = 1 then 'Stack'
      else 'Single' end as assign_type
          

FROM
(
SELECT dot.ref_order_id,date(from_unixtime(dot.submitted_time - 3600)) as report_date
,dot.uid
,dot.is_asap
,extract(hour from from_unixtime(dot.submitted_time - 3600)) as create_hour
,(dot.delivery_distance*1.00)/1000 as distance
,case when dot.pick_city_id = 217 then 'HCM'
when dot.pick_city_id = 218 then 'HN'
when dot.pick_city_id = 219 then 'DN'
when dot.pick_city_id = 220 then 'HP' 
ELSE 'OTH' end as city_group
,case when dot.ref_order_category = 0 then 'order_delivery'
      when dot.ref_order_category = 3 then 'now_moto'
      when dot.ref_order_category = 4 then 'now_ship'
      when dot.ref_order_category = 5 then 'now_ship'
      when dot.ref_order_category = 6 then 'now_ship_shopee'
      when dot.ref_order_category = 7 then 'now_ship_sameday'
      else null end service
,cast(json_extract(dotet.order_data,'$.shipper_policy.type') as bigint) as policy 
,sm.shipper_type_id
,hub.hub_name as pick_hub_name
,hubb.hub_name

,COALESCE(cast(json_extract(dotet.order_data,'$.hub_id') as BIGINT ),0) as hub_id
,COALESCE(cast(json_extract(dotet.order_data,'$.real_hub_id') as BIGINT ),0) as real_hub_id
,COALESCE(cast(json_extract(dotet.order_data,'$.pick_hub_id') as BIGINT ),0) as pick_hub_id
,COALESCE(cast(json_extract(dotet.order_data,'$.drop_hub_id') as BIGINT ),0) as drop_hub_id
,case when dot.group_id > 0 and coalesce(group_order.order_type,0) = 200 then 1 else 0 end as is_group_order
,case when dot.group_id > 0 and coalesce(group_order.order_type,0) = 0 then 1 else 0 end as is_stack_order



FROM shopeefood.foody_partner_db__driver_order_tab__reg_daily_s0_live dot
LEFT JOIN shopeefood.foody_partner_db__driver_order_extra_tab__reg_daily_s0_live dotet ON dot.id = dotet.order_id
LEFT JOIN shopeefood.foody_internal_db__shipper_hub_info_tab__reg_daily_s0_live hub on hub.id = COALESCE(cast(json_extract(dotet.order_data,'$.pick_hub_id') as BIGINT ),0)
LEFT JOIN shopeefood.foody_internal_db__shipper_hub_info_tab__reg_daily_s0_live hubb on hubb.id = COALESCE(cast(json_extract(dotet.order_data,'$.hub_id') as BIGINT ),0)

LEFT JOIN (SELECT *
,case when grass_date = 'current' then date(current_date)
else cast(grass_date as date) end as report_date
from shopeefood.foody_mart__profile_shipper_master
          where grass_region = 'VN')sm on sm.shipper_id = dot.uid and sm.report_date = date(from_unixtime(dot.submitted_time - 3600))

--GROUP
LEFT JOIN
(SELECT *

FROM shopeefood.foody_partner_db__order_group_mapping_tab__reg_daily_s0_live
WHERE grass_schema = 'foody_partner_db'

)ogm on dot.group_id = ogm.group_id and dot.ref_order_id = ogm.ref_order_id and ogm.mapping_status = 11 and ogm.ref_order_category = dot.ref_order_category

LEFT JOIN
(SELECT *

FROM shopeefood.foody_partner_db__order_group_mapping_tab__reg_daily_s0_live
WHERE grass_schema = 'foody_partner_db'

)ogm_filter on dot.group_id = ogm.group_id and dot.ref_order_id = ogm_filter.ref_order_id and ogm_filter.mapping_status = 11
and ogm_filter.ref_order_category = dot.ref_order_category
and ogm_filter.create_time > ogm.create_time

LEFT JOIN
(SELECT *

FROM shopeefood.foody_partner_db__order_group_info_tab__reg_daily_s0_live
WHERE grass_schema = 'foody_partner_db'
)ogi on ogi.id = ogm.group_id

---GROUP ASSIGN
LEFT JOIN
(SELECT
a.order_id
,a.order_type
,case when a.order_type <> 200 then order_type else ogi.ref_order_category end as order_category
,case when a.assign_type = 1 then '1. Single Assign'
when a.assign_type in (2,4) then '2. Multi Assign'
when a.assign_type = 3 then '3. Well-Stack Assign'
when a.assign_type = 5 then '4. Free Pick'
when a.assign_type = 6 then '5. Manual'
when a.assign_type in (7,8) then '6. New Stack Assign'
else null end as assign_type
,from_unixtime(a.create_time - 60*60) as create_time
,from_unixtime(a.update_time - 60*60) as update_time
,date(from_unixtime(a.create_time - 60*60)) as date_
,case when cast(FROM_UNIXTIME(a.create_time - 60*60) as date) between DATE('2019-12-30') and DATE('2019-12-31') then 202001
when cast(FROM_UNIXTIME(a.create_time - 60*60) as date) between DATE('2021-01-01') and DATE('2021-01-03') then 202053
else YEAR(cast(FROM_UNIXTIME(a.create_time - 60*60) as date))*100 + WEEK(cast(FROM_UNIXTIME(a.create_time - 60*60) as date)) end as year_week

from (SELECT concat(cast(order_id as VARCHAR),'-',cast(order_type as VARCHAR)) as order_uid, order_id, city_id, assign_type, update_time, create_time,status,order_type, experiment_group

from shopeefood.foody_partner_archive_db__order_assign_shipper_log_archive_tab__reg_daily_s0_live
where status in (3,4) -- shipper incharge

UNION

SELECT concat(cast(order_id as VARCHAR),'-',cast(order_type as VARCHAR)) as order_uid, order_id, city_id, assign_type, update_time, create_time,status,order_type, experiment_group

from shopeefood.foody_partner_db__order_assign_shipper_log_tab__reg_daily_s0_live
where status in (3,4) -- shipper incharge
)a

-- take last incharge
LEFT JOIN
(SELECT concat(cast(order_id as VARCHAR),'-',cast(order_type as VARCHAR)) as order_uid, order_id, city_id, assign_type, update_time, create_time,status

from shopeefood.foody_partner_archive_db__order_assign_shipper_log_archive_tab__reg_daily_s0_live
where status in (3,4) -- shipper incharge

UNION

SELECT concat(cast(order_id as VARCHAR),'-',cast(order_type as VARCHAR)) as order_uid, order_id, city_id, assign_type, update_time, create_time,status

from shopeefood.foody_partner_db__order_assign_shipper_log_tab__reg_daily_s0_live
where status in (3,4) -- shipper incharge
)a_filter on a.order_uid = a_filter.order_uid and a.create_time < a_filter.create_time

-- auto accept

LEFT JOIN shopeefood.foody_partner_db__order_group_info_tab__reg_daily_s0_live ogi on ogi.id > 0 and ogi.id = case when a.order_type = 200 then a.order_id else 0 end

where 1=1
and a_filter.order_id is null -- take last incharge
-- and a.order_id = 9490679
and a.order_type = 200

GROUP BY 1,2,3,4,5,6,7,8

)group_order on group_order.order_id = dot.group_id and dot.group_id > 0 and group_order.order_category = dot.ref_order_category

WHERE 1 = 1
and dot.ref_order_category <> 0 
and ogm_filter.create_time is null
--and dot.order_status = 400
and dot.pick_city_id in (217,218,220)
)base
WHERE 1 = 1 
and report_date between current_date - interval '30' day and current_date - interval '1' day
GROUP BY 1,2,3,4,5,6,7,8,9,10,11,12,13
)
,final_hour as
(SELECT a.report_date 
      ,cast(a.create_hour as varchar) as create_hour 
      ,a.city_group
      ,a.distance_range
      ,a.delivered_by
      ,cast(a.is_hub_qualified as varchar) as is_hub_qualified
      ,pfm.order_status
      ,case when pfm.source = 'now_ship_shopee' then case when pfm.order_status = 'Assigning Timeout' then 'No Driver' else coalesce(pfm.cancel_reason,'N/A') end
            when pfm.source in ('now_ship_user','now_ship_merchant') then case when pfm.last_incharge_timestamp is null and pfm.assigning_count > 0 and pfm.cancel_reason in ('No Reason','Wait for assigning driver too long','Unable to contact driver','Shipper denied Auto Accept order','Mistaken accept') then 'No Driver' else coalesce(pfm.cancel_reason,'N/A') end
            when pfm.source in ('now_ship_same_day') then case when pfm.last_incharge_timestamp is null and pfm.cancel_reason in ('No Reason','Wait for assigning driver too long','Unable to contact driver','Shipper denied Auto Accept order','Mistaken accept') then 'No Driver' else coalesce(pfm.cancel_reason,'N/A') end
            else coalesce(pfm.cancel_reason,'N/A') end as cancel_reason
      --,coalesce(pfm.cancel_reason,'N/A') as cancel_reason
      ,assign_type
      ,count(a.ref_order_id) as total_order
      ,count(distinct a.uid) as total_drivers
      ,sum(a.distance) as total_distance
      ,approx_percentile(a.distance,0.95) as pct95_distance
      ,approx_percentile(case when pfm.is_asap = 1 then pfm.lt_e2e else null end,0.95) as pct95_complete
      ,sum(case when pfm.is_asap = 1 and pfm.is_valid_lt_e2e = 1 then pfm.lt_e2e else null end)*1.000000/count(case when a.is_asap = 1 then a.ref_order_id else null end) as total_completion
      ,count(case when pfm.is_late_delivered = 1 then a.ref_order_id else null end) as total_late_deliver

from hub a 

left join vnfdbi_opsndrivers.snp_foody_nowship_performance_tab pfm on pfm.id = a.ref_order_id

where 1 = 1 


group by 1,2,3,4,5,6,7,8,9

)
,final_all as 
(SELECT a.report_date 
      ,'All' as create_hour 
      ,a.city_group
      ,'All' as distance_range
      ,a.delivered_by
      ,'All' as is_hub_qualified
      ,pfm.order_status
      ,case when pfm.source = 'now_ship_shopee' then case when pfm.order_status = 'Assigning Timeout' then 'No Driver' else coalesce(pfm.cancel_reason,'N/A') end
            when pfm.source in ('now_ship_user','now_ship_merchant') then case when pfm.last_incharge_timestamp is null and pfm.assigning_count > 0 and pfm.cancel_reason in ('No Reason','Wait for assigning driver too long','Unable to contact driver','Shipper denied Auto Accept order','Mistaken accept') then 'No Driver' else coalesce(pfm.cancel_reason,'N/A') end
            when pfm.source in ('now_ship_same_day') then case when pfm.last_incharge_timestamp is null and pfm.cancel_reason in ('No Reason','Wait for assigning driver too long','Unable to contact driver','Shipper denied Auto Accept order','Mistaken accept') then 'No Driver' else coalesce(pfm.cancel_reason,'N/A') end
            else coalesce(pfm.cancel_reason,'N/A') end as cancel_reason
      --,coalesce(pfm.cancel_reason,'N/A') as cancel_reason
      ,assign_type
      ,count(a.ref_order_id) as total_order
      ,count(distinct a.uid) as total_drivers
      ,sum(a.distance) as total_distance
      ,approx_percentile(a.distance,0.95) as pct95_distance
      ,approx_percentile(case when pfm.is_asap = 1 then pfm.lt_e2e else null end,0.95) as pct95_complete
      ,sum(case when pfm.is_asap = 1 and pfm.is_valid_lt_e2e = 1 then pfm.lt_e2e else null end)*1.000000/count(case when a.is_asap = 1 then a.ref_order_id else null end) as total_completion
      ,count(case when pfm.is_late_delivered = 1 then a.ref_order_id else null end) as total_late_deliver

from hub a 

left join vnfdbi_opsndrivers.snp_foody_nowship_performance_tab pfm on pfm.id = a.ref_order_id

where 1 = 1 


group by 1,2,3,4,5,6,7,8,9)