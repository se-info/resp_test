SELECT
base2.report_date
--base2.created_year_week
,base2.uid
,base2.shipper_name
,base2.city_group
--,base2.hub_name
--,base2.hub_type
--,base2.hub_seniority
,is_qualified_kpi
,sum(base2.total_order) as total_order
--,count(distinct base2.report_date) as working_date
--,count(case when is_qualified_kpi = 1 then base2.uid else null end) as kpi_pass_turn
--,sum(is_qualified_kpi) as kpi_turn
--,base2.less_than_min
--,base2.over_min
--,base2.pass_min


FROM
(
with hub AS
(SELECT shipper_id
,min(case when grass_date = 'current' then date(current_date) else cast(grass_date as date) end) first_day_in_hub
,max(case when grass_date = 'current' then date(current_date) else cast(grass_date as date) end) last_day_in_hub
from shopeefood.foody_mart__profile_shipper_master

where 1=1
and shipper_type_id = 12
group by 1)
SELECT base1.report_date
,base1.created_year_week
,base1.uid
,base1.shipper_name
,hub.first_day_in_hub
,case when hub.week_join_hub < (base1.created_year_week - 1) then 'Current Driver'
when hub.week_join_hub >= (base1.created_year_week - 1) then 'New Driver'
else null end as hub_seniority
,base1.city_group
,base1.hub_type
,base1.total_order
,case WHEN base1.hub_type = 'HUB5GIOS' AND base1.total_order < 16 THEN 1
WHEN base1.hub_type = 'HUB5GIOC' AND base1.total_order < 16 THEN 1
WHEN base1.hub_type = 'HUB8GIO' AND base1.total_order < 25 THEN 1
WHEN base1.hub_type = 'HUB10GIO' AND base1.total_order < 30 THEN 1
ELSE 0 END as less_than_min
,case WHEN base1.hub_type = 'HUB5GIOS' AND base1.total_order > 16 THEN 1
WHEN base1.hub_type = 'HUB5GIOC' AND base1.total_order > 16 THEN 1
WHEN base1.hub_type = 'HUB8GIO' AND base1.total_order > 25 THEN 1
WHEN base1.hub_type = 'HUB10GIO' AND base1.total_order >30 THEN 1
ELSE 0 END AS over_min
,case WHEN base1.hub_type = 'HUB5GIOS' AND base1.total_order = 16 THEN 1
WHEN base1.hub_type = 'HUB5GIOC' AND base1.total_order = 16 THEN 1
WHEN base1.hub_type = 'HUB8GIO' AND base1.total_order = 25 THEN 1
WHEN base1.hub_type = 'HUB10GIO' AND base1.total_order = 30 THEN 1
ELSE 0 END AS pass_min
,case when base1.hub_type = 'HUB10GIO' AND base1.total_order < 15 THEN 1
when base1.hub_type = 'HUB8GIO' AND base1.total_order < 12 THEN 1
when base1.hub_type = 'HUB5GIOS' AND base1.total_order < 7 THEN 1
when base1.hub_type = 'HUB5GIOC' AND base1.total_order < 7 THEN 1
else 0 end as hub_conditions
,base1.delivery_cost
,base1.bonus
,base1.bwf
,info.hub_name
,case when cast(json_extract(hc.extra_data,'$.shift_category_name') as varchar) = '10 hour shift'
and cast(json_extract(hc.extra_data,'$.stats.deny_count') as BIGINT) = 0
and cast(json_extract(hc.extra_data,'$.stats.ignore_count') as BIGINT) = 0
and (cast(json_extract(hc.extra_data,'$.stats.online_in_shift') as BIGINT)*1.000/3600)/10 >= 0.9
and array_join(cast(json_extract(hc.extra_data,'$.passed_conditions') as array<int>) ,',') like '%6%'
and cast(json_extract(hc.extra_data,'$.stats.online_peak_hour') as BIGINT)*1.000/3600 >= 2 then 1
when cast(json_extract(hc.extra_data,'$.shift_category_name') as varchar) = '8 hour shift'
and cast(json_extract(hc.extra_data,'$.stats.deny_count') as BIGINT) = 0
and cast(json_extract(hc.extra_data,'$.stats.ignore_count') as BIGINT) = 0
and (cast(json_extract(hc.extra_data,'$.stats.online_in_shift') as BIGINT)*1.000/3600)/8 >= 0.9
and array_join(cast(json_extract(hc.extra_data,'$.passed_conditions') as array<int>) ,',') like '%6%'
and cast(json_extract(hc.extra_data,'$.stats.online_peak_hour') as BIGINT)*1.000/3600 >= 2 then 1
when cast(json_extract(hc.extra_data,'$.shift_category_name') as varchar) = '5 hour shift'
and cast(json_extract(hc.extra_data,'$.stats.deny_count') as BIGINT) = 0
and cast(json_extract(hc.extra_data,'$.stats.ignore_count') as BIGINT) = 0
and (cast(json_extract(hc.extra_data,'$.stats.online_in_shift') as BIGINT)*1.000/3600)/5 >= 0.9
and array_join(cast(json_extract(hc.extra_data,'$.passed_conditions') as array<int>) ,',') like '%6%'
and cast(json_extract(hc.extra_data,'$.stats.online_peak_hour') as BIGINT)*1.000/3600 >= 1 then 1
else 0
end as is_qualified_kpi
FROM
(SELECT base.report_date
,base.created_year_week
,base.city_group
,base.uid
,base.hub_type
,base.shipper_name
,count(case when base.is_inshift = 1 then base.ref_order_id else null end ) as total_order
,sum(case when base.is_inshift = 1 then base.delivery_cost else null end) as delivery_cost
,sum(case when base.is_inshift = 1 then base.bonus else null end) as bonus
,sum(case when base.is_inshift = 1 then base.bwf else null end) as bwf
FROM
(SELECT dot.uid
,psm.shipper_name
,case
WHEN dot.pick_city_id = 217 then 'HCM'
WHEN dot.pick_city_id = 218 then 'HN'
ELSE NULL end as city_group
,psm.city_name
,date(from_unixtime(dot.real_drop_time -3600)) as report_date
,YEAR(date(from_unixtime(dot.real_drop_time -3600)))*100 + WEEK(date(from_unixtime(dot.real_drop_time -3600))) as created_year_week
,case
WHEN sst.shift_hour = 5 and sst.start_time < '11' then 'HUB5GIOS'
WHEN sst.shift_hour = 5 and sst.start_time > '11' then 'HUB5GIOC'
WHEN sst.shift_hour = 8 then 'HUB8GIO'
WHEN sst.shift_hour = 10 then 'HUB10GIO'
ELSE 'HUB' END AS hub_type
,case when date(from_unixtime(dot.real_drop_time -3600)) between date('2020-10-26') and date('2020-12-31') and psm.shipper_type_id = 12 and dot.pick_city_id = 217 then 1
when date(from_unixtime(dot.real_drop_time -3600)) between date('2021-07-09') and date('2021-10-05') and psm.shipper_type_id = 12 and dot.pick_city_id = 217 then 1
when date(from_unixtime(dot.real_drop_time -3600)) between date('2021-07-24') and date('2021-10-04') and psm.shipper_type_id = 12 and dot.pick_city_id = 218 then 1
when cast(json_extract(doet.order_data,'$.shipper_policy.type') as bigint) = 2 then 1 else 0 end as is_inshift
--,(13500 * count(oct.id)) as ship_shared
--,count(distinct oct.shipper_uid) as total_active_driver
--,sum(cast(json_extract(order_data,'$.shipping_fee_config.bad_weather_surge.surge_min_fee') as bigint )) as bwf --badweatherfee
,dot.delivery_cost*1.00/100 as delivery_cost
,dot.ref_order_id
,case when date(from_unixtime(dot.real_drop_time -3600)) between date('2021-07-09') and date('2021-10-05') and dot.pick_city_id = 217 then 10000
when date(from_unixtime(dot.real_drop_time -3600)) between date('2021-09-18') and date('2021-10-04') and dot.pick_city_id = 218 then 10000
--when date(from_unixtime(dot.real_drop_time -3600)) between date('2021-07-24') and date('2021-08-31') and psm.shipper_type_id = 12 and dot.pick_city_id = 218 then 10000
else 0 end as bonus
,coalesce(cast(json_extract(order_data,'$.shipping_fee_config.bad_weather_surge.surge_min_fee') as bigint ),0) as bwf
--,oct.id as order_id
--,case when dot.ref_order_category = 0 then 'Food'
--else 'Nowship' end as source
FROM foody.foody_partner_db__driver_order_tab dot

LEFT JOIN
(
select *
,Case
when grass_date = 'current' then date(current_date)
else cast(grass_date AS DATE ) END as report_date
from foody_mart__profile_shipper_master
) psm on psm.shipper_id = dot.uid AND psm.report_date = date(from_unixtime(dot.real_drop_time -3600))
left join foody.foody_order_db__order_completed_tab oct on oct.id = dot.ref_order_id
LEFT JOIN foody.foody_partner_db__driver_order_extra_tab doet on dot.id = doet.order_id

LEFT JOIN ( SELECT
id,date_format(from_unixtime(start_time - 25200),'%H') as start_time
,date_diff('hour',date_trunc('hour',from_unixtime(start_time - 3600)),date_trunc('hour',from_unixtime(end_time-3600))) as shift_hour
FROM foody.foody_internal_db__shipper_shift_tab) sst on sst.id = psm.shipper_shift_id

WHERE 1=1
AND dot.pick_city_id in (217,218)
AND psm.shipper_type_id in (12)
and dot.ref_order_category = 0

and psm.city_id in (217,218)
AND dot.ref_order_status in (7,11)
--AND date(from_unixtime(dot.real_drop_time -3600)) >= date((current_date) - interval '9' day)
--and date(from_unixtime(dot.real_drop_time -3600)) < date(current_date)
--AND date(from_unixtime(dot.real_drop_time -3600)) = date('2020-10-26')
GROUP by 1,2,3,4,5,6,7,8,9,10,11,12)base
where base.is_inshift = 1
GROUP BY 1,2,3,4,5,6)base1
LEFT JOIN (select *
,case when first_day_in_hub between DATE('2021-01-01') and DATE('2021-01-03') then 202053
else YEAR(first_day_in_hub)*100 + WEEK(first_day_in_hub) end as week_join_hub
FROM hub
)hub on hub.shipper_id = base1.uid
left join (select * from foody.foody_internal_db__shipper_hub_income_report_tab where 1=1)hc on hc.uid = base1.uid and date(from_unixtime(hc.report_date - 3600)) = base1.report_date
left join foody.foody_internal_db__shipper_hub_info_tab info on info.id = cast(json_extract(hc.extra_data,'$.hub_ids[0]') as bigint)
WHERE 1=1)base2


where 1 = 1
and base2.report_date >= current_date - interval '7' day 
--and hub_conditions = 1
--and cast(json_extract(hub.extra_data,'$.is_apply_fixed_amount') as VARCHAR) = 'true'
group by 1,2,3,4,5